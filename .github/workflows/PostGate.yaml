name: 'Create tag and sync to mirror'

on:
  workflow_run:
    workflows: [' CI/CD']
    types: [requested]
    branches: ['main', 'release/*']

defaults:
  run:
    shell: pwsh


jobs:
  CreateTag:
    if: github.repository == 'aholstrup1/AlAppExtensions'
    runs-on: ubuntu-latest
    steps:
     - name: Get Build Version
       id: GetBuildVersion
       env: 
        WORKFLOW_RUN_NUMBER: ${{ github.event.workflow_run.run_number}}
       run : |
        Write-Host "Workspace: $env:GITHUB_WORKSPACE"
        Write-Host "$(Get-ChildItem -Path $env:GITHUB_WORKSPACE)"
        
        Import-Module (Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "Build\Scripts\EnlistmentHelperFunctions.psm1" -Resolve)
        $buildVersion = Get-BuildVersion -BuildNumber $ENV:WORKFLOW_RUN_NUMBER
        Add-Content -Path $env:GITHUB_OUTPUT -Value "BuildVersion=$buildVersion"

     - name: Create version tag
       uses: actions/github-script@v6
       with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: ${{ steps.GetBuildVersion.outputs.BuildVersion }},
              sha: context.sha
            });
  
  SyncRepository:
    needs: [ CreateTag ]
    if: needs.CreateTag.result == 'Success' && github.repository == 'aholstrup1/AlAppExtensions'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout mirror
      uses: actions/checkout@v3
      with:
        ref: ${{ env.GITHUB_REF }}
        repository: ${{ secrets.MIRRORREPONAME }}
        token: ${{ secrets.SYNCREPOSITORYTOKEN }}
        fetch-depth: 0

    - name: Push latest changes to mirror
      id: Sync
      run : |
          Write-Host "Syncing commit $ENV:GITHUB_SHA by $ENV:GITHUB_ACTOR to $ENV:GITHUB_REF"
          $Branch = $ENV:GITHUB_REF -replace "refs/heads/"
          $UpstreamRepo = "https://github.com/$ENV:GITHUB_REPOSITORY"

          Write-Host "Adding upstream"
          git remote add upstream $UpstreamRepo

          git fetch --all --prune
          git pull upstream $Branch

          Write-Host "Pushing $Branch to origin"
          git push origin $Branch
          git push origin --tags
